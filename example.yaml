---
gitlab:
  application_id: ~  # Gitlab application ID for integration
  secret: ~  # The Gitlab application secret
  url: https://gitlab.com   # The URL to the Gitlab instance to integrate with

actions:
  github_deployment:
    enabled: false  # Enable GitHub deployment action

http:
  canonical_server_name: imbi.tld
  compress_response: true
  cookie_secret: imbi
  port: 8000
  processes: 2
  xheaders: true

ldap:
  enabled: true
  url: ldaps://localhost:636
  pool_size: 3  # Number of open connections for making authentication requests
  group_member_attr: member
  group_object_type: groupOfNames
  groups_dn: cn=groups,cn=accounts,dc=imbi,dc=tld
  user_object_type: inetOrgPerson
  username: uid
  users_dn: cn=users,cn=accounts,dc=imbi,dc=tld

postgres:
  url: postgresql://postgres@locahost:5432/postgres
  connection_ttl: 300  # How long a pooled connection to Postgres stays open
  connection_timeout: 3  # How log to wait until raising an error when failing to connect to the database
  min_pool_size: 1
  max_pool_size: 10
  query_timeout: 10  # Maximum number of seconds to wait on a query (default value)

session:
  duration: 7  # Max-session duration in days
  pool_size: 10
  redis_url: redis://localhost:6379/0

stats:
  pool_size: 10
  redis_url: redis://localhost:6379/1

logging:  # Uses Python dictConfig format for logging config
  version: 1
  formatters:
    verbose:
      format: "%(levelname) -10s %(asctime)s %(name) -15s %(funcName) -15s: %(message)s"
  handlers:
    console:
      class: logging.StreamHandler
      formatter: verbose
  loggers:
    imbi:
      level: INFO
      propagate: true
      handlers: [console]
    tornado:
      level: INFO
      propagate: true
      handlers: [console]
  disable_existing_loggers: true
  incremental: false
